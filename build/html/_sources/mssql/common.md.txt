# 共通

## レコード件数取得

```sql
-- レコード多くてcountでは取得できない時
SELECT
  SCHEMA_NAME(A.schema_id) + '.' + A.Name, AVG(B.rows) AS 'RowCount'
FROM        sys.objects A
INNER JOIN sys.partitions B ON A.object_id = B.object_id
WHERE       A.type = 'U'
GROUP BY    A.schema_id, A.Name
;
```

## テーブル定義

```sql
-- 論理名やプライマリーキーを含めてテーブル定義を取得
SELECT
  --t.object_id,
  CASE c.column_id WHEN 1 THEN t.name ELSE '' END as 'テーブル名',
  --t.name as 'テーブル名',
  CASE c.column_id WHEN 1 THEN ep_t.value ELSE '' END as 'テーブル論理名',
  --ep_t.value as 'テーブル論理名',
  --t.type as タイプ,
  --c.column_id,
  c.name as '列名',
  ep_c.value as '列論理名',
  CASE WHEN pk_tbl.key_ordinal IS NULL THEN '' ELSE CAST(pk_tbl.key_ordinal AS VARCHAR) END as PK,
  n.name as 'データ型',
  CASE WHEN n.name LIKE '%char%' then '' ELSE CAST(n.max_length AS VARCHAR) END as 'サイズ',
  c.max_length as '長さ',
  CASE WHEN n.name LIKE '%char%' then '' ELSE CAST(c.scale AS VARCHAR) END as '小数点桁数',
  CASE c.is_nullable WHEN 0 THEN '' ELSE '1' END as 'NULL許可',
  REPLACE(REPLACE(COALESCE(d.definition, ''),')',''),'(','') AS 'デフォルト値',
  CASE c.column_id WHEN 1 THEN CONVERT(VARCHAR, t.create_date,121) ELSE '' END as 'テーブル作成日',
  CASE c.column_id WHEN 1 THEN CONVERT(VARCHAR, t.modify_date,121) ELSE '' END as 'テーブル更新日'
FROM sys.objects t
INNER JOIN sys.columns c
  ON t.object_id = c.object_id
INNER JOIN sys.types n
  ON c.system_type_id = n.system_type_id
LEFT JOIN sys.default_constraints AS d
  ON d.parent_object_id = c.object_id
  AND d.parent_column_id = c.column_id
LEFT JOIN sys.extended_properties ep_t
  ON t.object_id = ep_t.major_id
  AND ep_t.minor_id = 0
LEFT JOIN sys.extended_properties ep_c
  ON c.object_id = ep_c.major_id
  AND c.column_id = ep_c.minor_id
LEFT JOIN (
  SELECT
    tbls.name as table_name
    ,key_const.name as constraint_name
    ,idx_cols.key_ordinal as key_ordinal
    ,cols.name as col_name
  FROM sys.tables as tbls
  INNER JOIN sys.key_constraints as key_const
    ON tbls.object_id = key_const.parent_object_id
    AND key_const.type = 'pk'
  INNER JOIN sys.index_columns as idx_cols
    ON key_const.parent_object_id = idx_cols.object_id
    AND key_const.unique_index_id  = idx_cols.index_id
  INNER JOIN sys.columns as cols
    ON idx_cols.object_id = cols.object_id
    AND idx_cols.column_id = cols.column_id
) pk_tbl
  ON pk_tbl.table_name = t.name
  AND pk_tbl.col_name = c.name
WHERE t.type = 'U'
ORDER BY t.name, c.column_id
;
```

## テーブル一覧

```sql
SELECT t.name AS 'TableName', ep.value AS 'PropertyValue'
FROM sys.tables t
INNER JOIN sys.extended_properties ep
  ON ep.major_id = t.object_id
  AND  ep.minor_id = 0
WHERE ep.name LIKE 'MS_Description'
;
```

## インデックス一覧

```sql
SELECT S.name AS SchemaName,
  O.name AS ObjectName,
  I.name AS IndexName,
  I.type_desc AS IndexTypeDesc,
  I.is_primary_key AS IsPrimaryKey,
  I.is_unique AS IsUnique,
  I.is_disabled AS IsDisabled,
  STUFF((SELECT ',' + COL_NAME(IC.object_id, IC.column_id)
         FROM sys.index_columns AS IC
         WHERE IC.is_included_column = 0
         AND IC.object_id = I.object_id
         AND IC.index_id = I.index_id
         ORDER BY IC.key_ordinal
         FOR XML PATH ('')), 1, 1, '') AS KeyColumns,
  STUFF((SELECT ',' + COL_NAME(IC.object_id, IC.column_id)
         FROM sys.index_columns AS IC
         WHERE IC.is_included_column = 1
         AND IC.object_id = I.object_id
         AND IC.index_id = I.index_id
         ORDER BY IC.index_column_id
         FOR XML PATH ('')), 1, 1, '') AS IncludedColumns
FROM sys.indexes AS I
INNER JOIN sys.objects AS O
  ON I.object_id = O.object_id
INNER JOIN sys.schemas AS S
  ON O.schema_id = S.schema_id
WHERE I.index_id > 0
AND O.is_ms_shipped = 0
ORDER BY S.name, O.name, I.name
;
```

## ユーザーマッピング

```sql
/* 不明なユーザー一覧を表示する方法 */
USE yosan
EXEC sp_change_users_login 'Report'
go
/*
  ユーザーマッピングの修復方法 
  (EXEC sp_change_users_login 'Update_One', '現在のDBに存在するユーザー名', 'SQL Serverログイン名'
*/
USE yosan
EXEC sp_change_users_login 'Update_One', 'yosan', 'yosan'
GO

USE yosan_old
EXEC sp_change_users_login 'Update_One', 'yosan', 'yosan'
GO

USE yosan_test
EXEC sp_change_users_login 'Update_One', 'yosan', 'yosan'
GO
```

## デバッグ権限付与

```sql
/*Windowsアカウントにデバッグ権限を与える*/
exec sp_addsrvrolemember 'MSK-INC\tamagawa.kenzi', 'sysadmin'
```

## ストアド検索

```sql
EXEC sp_helptext "ストアドプロシージャ名"
```

## インデックスの断片化

```sql
-- DB_IDを対象のデータベースに変更すること
SELECT a.index_id, name, avg_fragmentation_in_percent  
FROM sys.dm_db_index_physical_stats (DB_ID(N'TPORT_DB'), NULL, NULL, NULL, NULL) AS a  
    JOIN sys.indexes AS b 
      ON a.object_id = b.object_id AND a.index_id = b.index_id
WHERE avg_fragmentation_in_percent >= 15
ORDER BY name
;
```

## ヒット率

```sql
SELECT "[バッファキャッシュヒット率]" = ( opc.cntr_value * 1.0 / bcr.cntr_value ) * 100.0
FROM sys.dm_os_performance_counters opc
JOIN (SELECT cntr_value,
             object_name 
      FROM sys.dm_os_performance_counters  
      WHERE counter_name = 'Buffer cache hit ratio base'
      AND object_name LIKE '%Buffer Manager%') bcr 
ON  opc.OBJECT_NAME = bcr.OBJECT_NAME
WHERE opc.counter_name = 'Buffer cache hit ratio'
AND opc.OBJECT_NAME LIKE '%Buffer Manager%'
;

SELECT "[プランキャッシュヒット率]" = ( opc.cntr_value * 1.0 / bcr.cntr_value ) * 100.0
FROM sys.dm_os_performance_counters opc
JOIN (SELECT counter_name,
             cntr_value,
             object_name 
      FROM sys.dm_os_performance_counters  
      WHERE counter_name = 'Cache Hit Ratio Base'
      AND object_name LIKE '%Plan Cache%' 
      AND instance_name = '_Total') bcr 
ON  opc.OBJECT_NAME = bcr.OBJECT_NAME
WHERE opc.counter_name = 'Cache Hit Ratio'
AND opc.OBJECT_NAME LIKE '%Plan Cache%'
AND opc.instance_name = '_Total'
;
```

## 統計情報の調査

```sql
-- 一覧
SELECT
    so.name
    , ss.name
    , ss.auto_created
    , ss.user_created
    , ss.no_recompute
    , STATS_DATE(ss.object_id, ss.stats_id)
FROM
    sys.objects AS so
LEFT JOIN sys.stats AS ss
    ON ss.object_id = so.object_id
WHERE type = 'U'
ORDER BY so.name

-- サンプリング率の確認
SELECT 
    OBJECT_NAME(dsp.object_id) 
    , dsp.object_id 
    , ss.name 
    , dsp.last_updated 
    , dsp.rows 
    , dsp.rows_sampled 
    , dsp.steps 
    , dsp.unfiltered_rows 
    , dsp.modification_counter 
    , format(cast(dsp.rows_sampled as decimal) / cast(dsp.rows as decimal),'##0.0#') as [SamplingRate]
FROM 
    sys.stats AS ss 
CROSS APPLY sys.dm_db_stats_properties(ss.object_id, ss.stats_id) AS dsp 
WHERE OBJECT_SCHEMA_NAME(dsp.object_id, DB_ID()) <> 'sys'
Order by OBJECT_NAME(dsp.object_id) ,[SamplingRate]

-- 統計更新 DB単位
USE TPORT_DB
GO
exec sp_updatestats
;

-- 統計更新 テーブル単位
UPDATE STATISTICS dbo.M_CENTER

-- 統計更新 インデックス単位
UPDATE STATISTICS dbo.T_EMPTYCAR I_EMPTYCAR_03;
```

## 権限の確認

```sql
-- 指定したユーザーの権限一覧を表示する
SELECT
    USER_NAME(grantee_principal_id) AS user_name
    ,OBJECT_NAME(major_id) AS object_name
    ,permission_name as "権限名"
    ,state_desc as "権限の状態"
FROM sys.database_permissions
WHERE grantee_principal_id = USER_ID('lab_user')
;
-- 指定したオブジェクトの権限一覧を表示する
SELECT
    OBJECT_NAME(major_id) AS object_name
    ,USER_NAME(grantee_principal_id) AS user_name
    ,permission_name as "権限名"
    ,state_desc as "権限の状態"
FROM sys.database_permissions
WHERE major_id = OBJECT_ID('W_TDB')
;
-- 全体を確認
SELECT *,
    user_name(grantee_principal_id) AS user_name,
    class_desc AS object_class,
    object_name(major_id) AS object_name,
    permission_name
FROM
    sys.database_permissions
ORDER BY
    grantee_principal_id,
    class,
    major_id
;
```
